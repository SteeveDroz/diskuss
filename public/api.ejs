<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Diskuss API v<%= version %></title>
        <style>
            * {
                box-sizing:border-box;
            }

            body {
                background:#aaf;
            }

            article {
                max-width: 60em;
                margin: 0 auto;
            }

            section {
                background:#fff;
                border-radius:10px;
                box-shadow:3px 3px 3px rgba(0, 0, 0, 0.5) inset;
                padding:20px;
                margin-bottom: 2em;
            }
            
            section h1 {
                font-size:24pt;
                margin:0;
            }
            
            section h2 {
                font-size:18pt;
                margin:0;
            }
            
            code {
                background:#333;
                border: 2px solid #000;
                color:#fff;
                display:inline-block;
                padding:10px;
            }

            table {
                background:#eee;
                margin-top:10px;
            }

            td, th {
                background:#fff;
                padding:5px;
            }
        </style>
    </head>
    <body>
        <a name="top"></a>
        <article>
            <section>
                <h1>Diskuss API v<%= version %></h1>
                <p>This page shows the comprehensive list of request that are included in the Diskuss API.</p>
                <p>Diskuss is a chat server that can host numerous people in any number of channels. It handles group chat along with private chat.</p>
            </section>

            <section>
                <h2><a name="information">Information</a></h2>
                <p>This request returns informations about the server itself to anyone, without authentication.</p>
                <h3>Request</h3>
                <code>GET /info/</code>
                <h3>Response</h3>
                <div class="key-value">
                    version|The version of the server.
                </div>
            </section>

            <section>
                <h2><a name="list-users">List users</a></h2>
                <p>Anyone can ask for the list of connected users.</p>
                <h3>Request</h3>
                <code>GET /users/</code>
                <h3>Response</h3>
                <p>An array containing <a href="#user-object">user objects</a>.</p>
            </section>

            <section>
                <h2><a name="connection">Connection</a></h2>
                <p>In order to connect to the server, the client must request a GUID.</p>
                <h3>Request</h3>
                <code>POST /users/register/:nick/</code>
                <div class="key-value">
                    nick|The nickname linked to the client. If the desired nickname was unavailable, "_1" will be append to it. If this is also unavailable, "_2" will be append instead and so on.
                </div>
                <h3>Response</h3>
                <p>A <a href="#user-object">user object</a> containing all the informations about the newly created user (including the GUID).</p>
            </section>
            
            <section>
                <h2><a name="disconnection">Disconnection</a></h2>
                <p>To disconnect from the server means having its GUID revoked.</p>
                <h3>Request</h3>
                <code>DELETE /user/:id/disconnect/</code>
                <div class="key-value">
                    id|The user GUID.
                </div>
                <h3>Response</h3>
                <div class="key-value">
                    status|The string "Successfully disconnected from the server".
                </div>
            </section>

            <section>
                <h2><a name="whois">Whois</a></h2>
                <p>Anyone can ask the server informations about a connected user.</p>
                <h3>Request</h3>
                <code>GET /users/whois/:nick/</code>
                <div class="key-value">
                    nick|The nickname of the user one wants to have informations about.
                </div>
                <h3>Response</h3>
                <p>A <a href="#user-object">user object</a> representing whose nick matches the request.</p>
            </section>

            <section>
                <h2><a name="list-channels">List channels</a></h2>
                <p>Anyone can ask for the list of existing channels</p>
                <h3>Request</h3>
                <code>GET /channels/</code>
                <h3>Response</h3>
                <p>A list of <a href="#channel-object">channel objects</a>.</p>
            </section>

            <section>
                <h2><a name="join-channel">Join channel</a></h2>
                <p>A user can join a channel with that request</p>
                <h3>Request</h3>
                <code>PUT /user/:id/channels/:channel/join/</code>
                <div class="key-value">
                    id|The user GUID.||
                    channel|The name of the channel.
                </div>
                <h3>Response</h3>
                <div class="key-value">
                    channel|A <a href="#channel-object">channel object</a> representing the channel.||
                    users|An array of <a href="#user-object">user objects</a> representing the users that are currently in the channel.
                </div>
            </section>
            
            <section>
                <h2><a name="talk-in-channel">Talk in channel</a></h2>
                <p>When a user is in a channel, he or she can say something that will be viewable by every other user in the same channel.</p>
                <h3>Request</h3>
                <code>PUT /user/:id/channels/:channel/say/?message=:message</code>
                <div class="key-value">
                    id|The user GUID.||
                    channel|The name of the channel.||
                    message|The message to transmit to other users.
                </div>
                <h3>Response</h3>
                <div class="key-value">
                    status|The string "Message sent correctly".||
                    message|The message sent.
                </div>
            </section>
            
            <section>
                <h2><a name="change-channel-description">Change channel description</a></h2>
                <p>A user can change the description of a channel.</p>
                <h3>Request</h3>
                <code>PUT /user/:id/channels/:channel/description/?description=:description</code>
                <div class="key-value">
                    id|The user GUID.||
                    channel|The name of the channel.||
                    description|The description of the channel.
                </div>
                <h3>Response</h3>
                <div class="key-value">
                    status|The string "Changing the description".||
                    channel|A <a href="#channel-object">channel object</a> representing the channel.
                </div>
            </section>
            
            <section>
                <h2><a name="keep-channel">Keep channel</a></h2>
                <p>A user can decide that a channel still exists even if all the users left.</p>
                <h3>Request</h3>
                <code>PUT /user/:id/channels/:channel/keep/?keep=:value</code>
                <div class="key-value">
                    id|The user GUID.||
                    channel|The name of the channel.||
                    value|"true" if the channel must be kept or "false" otherwise.
                </div>
                <h3>Response</h3>
                <div class="key-value">
                    status|The string "Changing the persistence".||
                    channel|A <a href="#channel-object">channel object</a> representing the channel.
                </div>
            </section>
            
            <section>
                <h2><a name="give-channel-ownership">Give channel ownership</a></h2>
                <p>When a user owns a channel, they can give it to another user. The first user thereby loses the ownership.</p>
                <h3>Request</h3>
                <code>PUT /user/:id/channels/:channel/owner/:nick</code>
                <div class="key-value">
                    id|The user GUID.||
                    channel|The name of the channel.||
                    nick|The nick of the new owner.
                </div>
                <h3>Response</h3>
                <div class="key-value">
                    status|The string "Ownership transfered".||
                    channel|A <a href="#channel-object">channel object</a> representing the channel.
                </div>
            </section>

            <section>
                <h2><a name="leave-channel">Leave channel</a></h2>
                <p>A user can leave a channel with that request</p>
                <h3>Request</h3>
                <code>DELETE /user/:id/channels/:channel/leave/</code>
                <div class="key-value">
                    id|The user GUID.||
                    channel|The name of the channel.
                </div>
                <h3>Response</h3>
                <div class="key-value">
                    status|The string "Leaving the channel".||
                    channel|A <a href="#channel-object">channel object</a> representing the channel.
                </div>
            </section>
            
            <section>
                <h2><a name="send-private-message">Send private message</a></h2>
                <p>A user can send a private message that will only be viewable by the recipient.</p>
                <h3>Request</h3>
                <code>PUT /user/:id/message/:nick/?message=:message</code>
                <div class="key-value">
                    id|The sender GUID.||
                    nick|The recipient nick.||
                    message|The message to be sent.
                </div>
                <h3>Response</h3>
                <div class="key-value">
                    status|The string "Private message sent correctly".||
                    message|The message sent.||
                    recipient|A <a href="#user-object">user object</a> representing the recipient.
                </div>
            </section>
            
            <section>
                <h2><a name="fetch-notices">Fetch notices</a></h2>
                <p>Notices are stored in the <a href="#user-object">user object</a>, on the server. If a client wants to retrieve thoses notices, it must send a request to ask for them.</p>
                <p>IMPORTANT: the fetching of notices is used to check if users are still connected. Any user not asking for notices every 5 seconds will be disconnected by the server.</p>
                <h3>Request</h3>
                <code>GET /user/:id/notices/</code>
                <div class="key-value">
                    id|The user GUID.
                </div>
                <h3>Response</h3>
                <p>A JSON list that contains all the notices addressed to the user.</p>
                <p>Possible notices have different structure with a common attribute <code>type</code>. Here are the structures of the notices:</p>
                <table>
                    <thead>
                        <tr>
                            <th>Type</th>
                            <th colspan="4">Other attributes</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th rowspan="3">channelJoin</th>
                            <th>nick</th>
                            <th>channel</th>
                            <th>time</th>
                            <th rowspan="2"></th>
                        </tr>
                        <tr>
                            <td>The nick of the user that joins the channel.</td>
                            <td>The channel concerned.</td>
                            <td>The time of the event.</td>
                        </tr>
                        <tr>
                            <td colspan="4"><code>{ type: 'channelJoin', nick: 'user_1', channel: { name: 'help', description: 'Get help here', keep: true, owner: 'user_1' }, time: '2000-12-31T23:59:59.999Z' }</code></td>
                        </tr>
                        <tr>
                            <th rowspan="3">channelMessage</th>
                            <th>nick</th>
                            <th>channel</th>
                            <th>message</th>
                            <th>time</th>
                        </tr>
                        <tr>
                            <td>The nick of the speaker.</td>
                            <td>The channel concerned.</td>
                            <td>The message to display.</td>
                            <td>The time of the event.</td>
                        </tr>
                        <tr>
                            <td colspan="4"><code>{ type: 'channelMessage', nick: 'user_1', channel: { name: 'help', description: 'Get help here', keep: true, owner: 'user_1' }, message:'Hello, world!', time: '2000-12-31T23:59:59.999Z' }</code></td>
                        </tr>
                        <tr>
                            <th rowspan="3">channelLeave</th>
                            <th>nick</th>
                            <th>channel</th>
                            <th>time</th>
                            <th rowspan="2"></th>
                        </tr>
                        <tr>
                            <td>The nick of the leaving user.</td>
                            <td>The channel concerned.</td>
                            <td>The time of the event.</td>
                        </tr>
                        <tr>
                            <td colspan="4"><code>{ type: 'channelLeave', nick: 'user_1', channel: { name: 'help', description: 'Get help here', keep: true, owner: 'user_1' }, time: '2000-12-31T23:59:59.999Z' }</code></td>
                        </tr>
                        <tr>
                            <th rowspan="3">privateMessage</th>
                            <th>sender</th>
                            <th>recipient</th>
                            <th>message</th>
                            <th>time</th>
                        </tr>
                        <tr>
                            <td>The nick of the sender.</td>
                            <td>The nick of the recipient.</td>
                            <td>The message to display.</td>
                            <td>The time of the event.</td>
                        </tr>
                        <tr>
                            <td colspan="4"><code>{ type: 'privateMessage', sender: 'user_1', recipient: 'user_2', message: 'Hello, world!', time: '2000-12-31T23:59:59.999Z' }</code></td>
                        </tr>
                        <tr>
                            <th rowspan="3">channelDescription</th>
                            <th>nick</th>
                            <th>channel</th>
                            <th>time</th>
                            <th rowspan="2"></th>
                        </tr>
                        <tr>
                            <td>The nick of the user who changed the description.</td>
                            <td>The channel concerned.</td>
                            <td>The time of the event.</td>
                        </tr>
                        <tr>
                            <td colspan="4"><code>{ type: 'channelDescription', nick: 'user_1', channel: { name: 'help', description: 'Get help here', keep: true, owner: 'user_1' }, time: '2000-12-31T23:59:59.999Z' }</code></td>
                        </tr>
                        <tr>
                            <th rowspan="3">channelKeep</th>
                            <th>nick</th>
                            <th>channel</th>
                            <th>time</th>
                            <th rowspan="2"></th>
                        </tr>
                        <tr>
                            <td>The nick of the user who changed the persistence.</td>
                            <td>The channel concerned.</td>
                            <td>The time of the event.</td>
                        </tr>
                        <tr>
                            <td colspan="4"><code>{ type: 'channelKeep', nick: 'user_1', channel: { name: 'help', description: 'Get help here', keep: true, owner: 'user_1' }, time: '2000-12-31T23:59:59.999Z' }</code></td>
                        </tr>
                        <tr>
                            <th rowspan="3">channelOwner</th>
                            <th>channel</th>
                            <th>nick</th>
                            <th>time</th>
                            <th rowspan="2"></th>
                        </tr>
                        <tr>
                            <td>The channel concerned.</td>
                            <td>The nick of the previous owner.</td>
                            <td>The time of the event.</td>
                        </tr>
                        <tr>
                            <td colspan="4"><code>{ type: 'channelKeep', channel: { name: 'help', description: 'Get help here', keep: true, owner: 'user_2' }, nick: 'user_1', time: '2000-12-31T23:59:59.999Z' }</code></td>
                        </tr>
                    </tbody>
                </table>
            </section>

            <section>
                <h2><a name="user-object">User object</a></h2>
                <p>A user object is composed of:</p>
                <div class="key-value">
                    id|A GUID (this is never shown, except when a new user registers).||
                    nick|The nickname of the user.||
                    channels|The list of channels the user is currently in as <a href="#channel-object">channel objects</a>.
                </div>
            </section>

            <section>
                <h2><a name="channel-object">Channel object</a></h2>
                <p>A channel object is composed of:</p>
                <div class="key-value">
                    name|The name of the channel is also its identifier.||
                    description|A description of the channel.||
                    keep|If true, the channel will exist even if it contains no user.
                </div>
            </section>

            <section>
                <h2><a name="error-handling">Error handling</a></h2>
                <p>Whatever the URI may be, if the resource or action asked is unavailable for some reason or the action is illegal, a JSON containing a single entry which key is called <code>error</code> will be sent. The value of that entry is the error message.</p>
            </section>
        </article>
        <script language="javascript" defer>
            const sections = document.getElementsByTagName('section')
            for (let i in sections) {
                sections[i].innerHTML += '<a href="#top">Back to top</a>'
            }
            
            [].forEach.call(document.getElementsByClassName('key-value'), function(tableData) {
                const table = document.createElement('table')
                table.innerHTML = '<thead><tr><th>Key</th><th>Value</th></tr></thead>'
                const body = document.createElement('tbody')
                const lines = tableData.innerHTML.split('||')
                lines.forEach(function(lineData) {
                    const line = document.createElement('tr')
                    const cells = lineData.split('|')
                    cells.forEach(function(cellData) {
                        const cell = document.createElement('td')
                        cell.innerHTML = cellData.trim()
                        line.appendChild(cell)
                    })
                    body.appendChild(line)
                })
                table.appendChild(body)
                
                tableData.innerHTML = ''
                tableData.appendChild(table)
            })
        </script>
    </body>
</html>
